@model ProjectPortfolio.Models.Project

@{
    ViewBag.Title = "Rediger";
}

<h2>Rediger</h2>


@using (Html.BeginForm("Edit", "Project", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
                @Html.AntiForgeryToken()

      <div class="form-horizontal">
        <h4>@Model.Name</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProjectId)

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelfFinancing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelfFinancing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelfFinancing, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FunderId, "Fond", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FunderId", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FunderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgramId, "Program", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProgramId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
            </div>
        </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Person, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Person, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Person, "", new { @class = "text-danger" })
              </div>
          </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Responsible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Responsible, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Responsible, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Start attachment - application *@

        @if (Model.Files.Any(f => f.FileType == FileType.application))
        {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>Ansøgning</strong></span>
                <div class="col-md-10">
                    @Html.ActionLink(@Model.Files.First(f => f.FileType == FileType.application).FileName, "Index", "File",
                new { id = @Model.Files.First(f => f.FileType == FileType.application).FileId }, null)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Tilføj/erstat ansøgning", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Application" name="uploadApp" />
            </div>
        </div>

                    @* End attachment *@


        @* Start attachment - response *@

        @if (Model.Files.Any(f => f.FileType == FileType.response))
        {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>Svar fra fond</strong></span>
                <div class="col-md-10">
                    @Html.ActionLink(@Model.Files.First(f => f.FileType == FileType.response).FileName, "Index", "File",
                new { id = @Model.Files.First(f => f.FileType == FileType.response).FileId }, null)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Tilføj/erstat svarbrev", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Response" name="uploadResponse" />
            </div>
        </div>

        @* End attachment *@

          
          <div class="form-group" title="Projektnummer oprettes af Budget- og aktivitetsstyring">
              @Html.LabelFor(model => model.ProjectNumber, htmlAttributes: new { @class = "control-label col-md-2" })
              
              <div class="col-md-10">
                  @Html.EditorFor(model => model.ProjectNumber, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.ProjectNumber, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
              </div>
          </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Gem" class="btn btn-default" />
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Tilbage til listen", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
