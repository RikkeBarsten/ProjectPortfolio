@model ProjectPortfolio.Models.Project

@{
    ViewBag.Title = "Opret";
}

<h2>Opret</h2>


@using (Html.BeginForm("Create", "Project", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <br />
        <h4 class="divider">Overordnet projektinformation</h4>
        <hr class="divider"/>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4 class="divider">Økonomi</h4>
        <hr class="divider"/>

        <div class="form-group">
            @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelfFinancing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelfFinancing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelfFinancing, "", new { @class = "text-danger" })
            </div>
        </div>
        
   
        
        <div class="form-group">
            @Html.LabelFor(model => model.MultiplePartners, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.MultiplePartners, new { @class = "form-control",
               onchange = "multipleselected(this)"})
                @Html.ValidationMessageFor(model => model.MultiplePartners, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Kun for projekter med flere partnere - If MultiplePartners == true *@


        <div class="form-group skjul" style="display: none">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Owner, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group skjul" style="display: none">
            @Html.LabelFor(model => model.AggregatedBudget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AggregatedBudget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AggregatedBudget, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Resten er for alle *@

               
        
        
        <div class="form-group">
            <label class="control-label col-md-2" for="FunderId">Bevillingstype</label>
            <div class="col-md-10">
                @Html.DropDownList("FunderId", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FunderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4 class="divider">Strategisk</h4>
        <hr class="divider"/>

        <div class="form-group">
            <label class="control-label col-md-2" for="ProgramId">Strategisk Program</label>
            <div class="col-md-10">
                @Html.DropDownList("ProgramId", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="PrimaryFocus">Primært indsatsområde</label>
            <div class="col-md-10">
                @Html.DropDownList("PrimaryFocus", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PrimaryFocus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="SecondaryFocus">Underindsatsområde</label>
            <div class="col-md-10">
                @Html.DropDownList("SecondaryFocus", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SecondaryFocus, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4 class="divider">Ansvar</h4>
        <hr class="divider"/>

        <div class="form-group">
            @Html.LabelFor(model => model.Person, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Person, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Responsible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Responsible, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Responsible, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.RespNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RespNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RespNo, "", new { @class = "text-danger" })
            </div>
        </div>   

        <br />
        <h4 class="divider">Øvrigt</h4>
        <hr class="divider"/>

        <div class="form-group">
            @Html.Label("Vedhæft ansøgning", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <input type="file" id="Application" name="uploadApp" class="btn btn-default"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opret" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Tilbage til oversigten", "Index")
</div>

<script>
    function multipleselected(element)
    {
        console.log(element.value);
        var elements = document.getElementsByClassName("skjul");

        if (element.value == "1") {

            for (var i = 0; i < elements.length; i++) {
                elements[i].style.display = "block";
            }
        }
        else  {
           
            for (var i = 0; i < elements.length; i++) {
                elements[i].style.display = "none";
            }
        }

    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



